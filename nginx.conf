worker_processes 1;
error_log logs/error.log notice;
daemon off;
pid logs/nginx.pid;
user ${{USER}};

events {
  worker_connections 1024;
}

http {
  include mime.types;
  server {
    listen ${{PORT}};
    server_name ${{SERVERNAME}};
    lua_code_cache off;

    location / {
      set $_url "";
      default_type text/html;
      content_by_lua '
        require("lapis").serve("app")
      ';
    }

    location /static/ {
      alias static/;
    }

    location /favicon.ico {
      alias static/favicon.ico;
    }
        location /proxy {
        internal;
        rewrite_by_lua "
          local req = ngx.req

          for k,v in pairs(req.get_headers()) do
            if k ~= 'content-length' then
              req.clear_header(k)
            end
          end

          if ngx.ctx.headers then
            for k,v in pairs(ngx.ctx.headers) do
              req.set_header(k, v)
            end
          end
        ";

        proxy_http_version 1.1;
        proxy_pass $_url;
        resolver 8.8.8.8;
    }
  }
}
